[debug] [2025-09-10T07:28:14.379Z] ----------------------------------------------------------------------
[debug] [2025-09-10T07:28:14.389Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\hp\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js deploy --only firestore:rules
[debug] [2025-09-10T07:28:14.390Z] CLI Version:   14.15.1
[debug] [2025-09-10T07:28:14.390Z] Platform:      win32
[debug] [2025-09-10T07:28:14.391Z] Node Version:  v22.13.1
[debug] [2025-09-10T07:28:14.392Z] Time:          Wed Sep 10 2025 12:28:14 GMT+0500 (Pakistan Standard Time)
[debug] [2025-09-10T07:28:14.392Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-09-10T07:28:14.400Z] >>> [apiv2][query] GET https://firebase-public.firebaseio.com/cli.json [none]
[debug] [2025-09-10T07:28:15.348Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-09-10T07:28:15.349Z] > authorizing via signed-in user (shaheermalik03@gmail.com)
[debug] [2025-09-10T07:28:15.349Z] [iam] checking project rangefitgym-8bae0 for permissions ["datastore.indexes.create","datastore.indexes.delete","datastore.indexes.list","datastore.indexes.update","firebase.projects.get"]
[debug] [2025-09-10T07:28:15.351Z] Checked if tokens are valid: false, expires at: 1757399558728
[debug] [2025-09-10T07:28:15.352Z] Checked if tokens are valid: false, expires at: 1757399558728
[debug] [2025-09-10T07:28:15.352Z] > refreshing access token with scopes: []
[debug] [2025-09-10T07:28:15.355Z] >>> [apiv2][query] POST https://www.googleapis.com/oauth2/v3/token [none]
[debug] [2025-09-10T07:28:15.356Z] >>> [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2025-09-10T07:28:15.985Z] <<< [apiv2][status] GET https://firebase-public.firebaseio.com/cli.json 200
[debug] [2025-09-10T07:28:15.986Z] <<< [apiv2][body] GET https://firebase-public.firebaseio.com/cli.json {"cloudBuildErrorAfter":1594252800000,"cloudBuildWarnAfter":1590019200000,"defaultNode10After":1594252800000,"minVersion":"3.0.5","node8DeploysDisabledAfter":1613390400000,"node8RuntimeDisabledAfter":1615809600000,"node8WarnAfter":1600128000000}
[debug] [2025-09-10T07:28:16.351Z] <<< [apiv2][status] POST https://www.googleapis.com/oauth2/v3/token 200
[debug] [2025-09-10T07:28:16.351Z] <<< [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2025-09-10T07:28:16.368Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/rangefitgym-8bae0:testIamPermissions [none]
[debug] [2025-09-10T07:28:16.369Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/rangefitgym-8bae0:testIamPermissions x-goog-quota-user=projects/rangefitgym-8bae0
[debug] [2025-09-10T07:28:16.369Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/rangefitgym-8bae0:testIamPermissions {"permissions":["datastore.indexes.create","datastore.indexes.delete","datastore.indexes.list","datastore.indexes.update","firebase.projects.get"]}
[debug] [2025-09-10T07:28:17.966Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/rangefitgym-8bae0:testIamPermissions 200
[debug] [2025-09-10T07:28:17.967Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/rangefitgym-8bae0:testIamPermissions {"permissions":["datastore.indexes.create","datastore.indexes.delete","datastore.indexes.list","datastore.indexes.update","firebase.projects.get"]}
[info] 
[info] === Deploying to 'rangefitgym-8bae0'...
[info] 
[info] i  deploying firestore 
[info] i  firestore: reading indexes from firestore.indexes.json... 
[info] i  cloud.firestore: checking firestore.rules for compilation errors... 
[debug] [2025-09-10T07:28:17.989Z] Checked if tokens are valid: true, expires at: 1757492895352
[debug] [2025-09-10T07:28:17.990Z] Checked if tokens are valid: true, expires at: 1757492895352
[debug] [2025-09-10T07:28:17.992Z] >>> [apiv2][query] POST https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0:test [none]
[debug] [2025-09-10T07:28:17.993Z] >>> [apiv2][body] POST https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0:test [omitted]
[debug] [2025-09-10T07:28:19.614Z] <<< [apiv2][status] POST https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0:test 200
[debug] [2025-09-10T07:28:19.614Z] <<< [apiv2][body] POST https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0:test {}
[info] +  cloud.firestore: rules file firestore.rules compiled successfully 
[debug] [2025-09-10T07:28:19.616Z] Checked if tokens are valid: true, expires at: 1757492895352
[debug] [2025-09-10T07:28:19.616Z] Checked if tokens are valid: true, expires at: 1757492895352
[debug] [2025-09-10T07:28:19.617Z] >>> [apiv2][query] GET https://firestore.googleapis.com/v1/projects/rangefitgym-8bae0/databases/(default) [none]
[debug] [2025-09-10T07:28:22.409Z] <<< [apiv2][status] GET https://firestore.googleapis.com/v1/projects/rangefitgym-8bae0/databases/(default) 200
[debug] [2025-09-10T07:28:22.409Z] <<< [apiv2][body] GET https://firestore.googleapis.com/v1/projects/rangefitgym-8bae0/databases/(default) {"name":"projects/rangefitgym-8bae0/databases/(default)","uid":"af13e4f4-1ac1-46cf-a100-788535626d05","createTime":"2025-08-18T13:15:16.659893Z","updateTime":"2025-08-18T13:15:16.659893Z","locationId":"nam5","type":"FIRESTORE_NATIVE","concurrencyMode":"PESSIMISTIC","versionRetentionPeriod":"3600s","earliestVersionTime":"2025-09-10T06:28:21.657286Z","appEngineIntegrationMode":"DISABLED","keyPrefix":"s","pointInTimeRecoveryEnablement":"POINT_IN_TIME_RECOVERY_DISABLED","deleteProtectionState":"DELETE_PROTECTION_DISABLED","databaseEdition":"STANDARD","freeTier":true,"etag":"IOyqluzVzY8DMImfs9nIlI8D"}
[debug] [2025-09-10T07:28:22.412Z] Checked if tokens are valid: true, expires at: 1757492895352
[debug] [2025-09-10T07:28:22.412Z] Checked if tokens are valid: true, expires at: 1757492895352
[debug] [2025-09-10T07:28:22.413Z] >>> [apiv2][query] GET https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0/releases pageSize=10&pageToken=
[debug] [2025-09-10T07:28:23.811Z] <<< [apiv2][status] GET https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0/releases 200
[debug] [2025-09-10T07:28:23.812Z] <<< [apiv2][body] GET https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0/releases {"releases":[{"name":"projects/rangefitgym-8bae0/releases/cloud.firestore","rulesetName":"projects/rangefitgym-8bae0/rulesets/e3349927-b9c4-4f9d-a10d-688d1e7ef072","createTime":"2025-08-18T13:15:21.070277Z","updateTime":"2025-09-09T05:40:35.524880Z"}]}
[debug] [2025-09-10T07:28:23.814Z] Checked if tokens are valid: true, expires at: 1757492895352
[debug] [2025-09-10T07:28:23.815Z] Checked if tokens are valid: true, expires at: 1757492895352
[debug] [2025-09-10T07:28:23.815Z] >>> [apiv2][query] GET https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0/rulesets/e3349927-b9c4-4f9d-a10d-688d1e7ef072 [none]
[debug] [2025-09-10T07:28:24.614Z] <<< [apiv2][status] GET https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0/rulesets/e3349927-b9c4-4f9d-a10d-688d1e7ef072 200
[debug] [2025-09-10T07:28:24.615Z] <<< [apiv2][body] GET https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0/rulesets/e3349927-b9c4-4f9d-a10d-688d1e7ef072 [omitted]
[info] i  firestore: uploading rules firestore.rules... 
[debug] [2025-09-10T07:28:24.622Z] Checked if tokens are valid: true, expires at: 1757492895352
[debug] [2025-09-10T07:28:24.622Z] Checked if tokens are valid: true, expires at: 1757492895352
[debug] [2025-09-10T07:28:24.623Z] >>> [apiv2][query] POST https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0/rulesets [none]
[debug] [2025-09-10T07:28:24.623Z] >>> [apiv2][body] POST https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0/rulesets [omitted]
[debug] [2025-09-10T07:28:25.649Z] <<< [apiv2][status] POST https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0/rulesets 200
[debug] [2025-09-10T07:28:25.649Z] <<< [apiv2][body] POST https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0/rulesets {"name":"projects/rangefitgym-8bae0/rulesets/ddb5c62c-ffbb-45b2-be40-cb9c2d70c182","source":{"files":[{"content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    // Helper function to check if user is admin\n    function isAdmin() {\n      return request.auth != null && \n        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&\n        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';\n    }\n    \n    // Helper function to check if user is receptionist\n    function isReceptionist() {\n      return request.auth != null && \n        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&\n        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'receptionist';\n    }\n    \n    // Helper function to check if user is admin or receptionist\n    function isAdminOrReceptionist() {\n      return isAdmin() || isReceptionist();\n    }\n    \n    // Helper function to check if user is authenticated\n    function isAuthenticated() {\n      return request.auth != null;\n    }\n    \n    // Users collection - consolidated rules\n    match /users/{userId} {\n      // Allow users to read their own documents\n      allow read: if isAuthenticated() && request.auth.uid == userId;\n      \n      // Allow users to create their own documents during signup\n      allow create: if isAuthenticated() && request.auth.uid == userId;\n      \n      // Allow users to update their own documents\n      allow update: if isAuthenticated() && request.auth.uid == userId;\n      \n      // Allow admin and receptionist users to read and write all user documents\n      allow read, write: if isAdminOrReceptionist();\n      \n      // Allow limited updates for admin password authentication (lastLoginAt only)\n      allow update: if request.auth == null && \n        request.resource.data.keys().hasOnly(['lastLoginAt']) &&\n        request.resource.data.lastLoginAt is timestamp;\n    }\n    \n    // Allow reading user documents for authentication (admin-set passwords)\n    // This is needed for the authenticateWithAdminPassword function\n    match /users/{document=**} {\n      // Allow unauthenticated reads for admin password authentication\n      allow read: if request.auth == null;\n      \n      // Allow admin and receptionist users to read all users for listing and management\n      allow read: if isAdminOrReceptionist();\n    }\n    \n    // Memberships collection\n    match /memberships/{membershipId} {\n      // Allow users to read their own memberships\n      allow read: if isAuthenticated() && request.auth.uid == resource.data.uid;\n      \n      // Allow users to create their own membership requests\n      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.uid;\n      \n      // Allow admin and receptionist users to read and write all memberships\n      allow read, write: if isAdminOrReceptionist();\n    }\n    \n    // Allow users to query their own memberships and admins/receptionists to query all\n    match /memberships/{document=**} {\n      allow read: if isAuthenticated() && \n        (isAdminOrReceptionist() || resource.data.uid == request.auth.uid);\n    }\n    \n    // Payments collection\n    match /payments/{paymentId} {\n      // Allow users to read their own payments\n      allow read: if isAuthenticated() && request.auth.uid == resource.data.uid;\n      \n      // Allow users to create their own payment records\n      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.uid;\n      \n      // Allow admin and receptionist users to read and write all payments\n      allow read, write: if isAdminOrReceptionist();\n    }\n    \n    // Allow users to query their own payments and admins/receptionists to query all\n    match /payments/{document=**} {\n      allow read: if isAuthenticated() && \n        (isAdminOrReceptionist() || resource.data.uid == request.auth.uid);\n    }\n    \n    // MembershipRequests collection\n    match /membershipRequests/{requestId} {\n      // Allow users to read their own membership requests\n      allow read: if isAuthenticated() && request.auth.uid == resource.data.uid;\n      \n      // Allow users to create their own membership requests\n      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.uid;\n      \n      // Allow admin and receptionist users to read and write all membership requests\n      allow read, write: if isAdminOrReceptionist();\n    }\n    \n    // Allow users to query their own membership requests and admins/receptionists to query all\n    match /membershipRequests/{document=**} {\n      allow read: if isAuthenticated() && \n        (isAdminOrReceptionist() || resource.data.uid == request.auth.uid);\n    }\n    \n    // Receipts collection\n    match /receipts/{receiptId} {\n      // Allow users to read their own receipts\n      allow read: if isAuthenticated() && request.auth.uid == resource.data.userId;\n      \n      // Allow users to create their own receipts (for membership generation)\n      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;\n      \n      // Allow admin and receptionist users to read and write all receipts\n      allow read, write: if isAdminOrReceptionist();\n    }\n    \n    // Allow users to query their own receipts and admins/receptionists to query all\n    match /receipts/{document=**} {\n      allow read: if isAuthenticated() && \n        (isAdminOrReceptionist() || resource.data.userId == request.auth.uid);\n    }\n    \n    // Expenses collection\n    match /expenses/{expenseId} {\n      // Allow admin users to read and write all expenses\n      allow read, write: if isAdmin();\n    }\n    \n    // Allow admin users to query all expenses\n    match /expenses/{document=**} {\n      allow read: if isAdmin();\n    }\n  }\n}\n","name":"firestore.rules"}]},"createTime":"2025-09-10T07:28:25.082463Z","metadata":{"services":["cloud.firestore"]}}
[debug] [2025-09-10T07:28:25.650Z] [rules] created ruleset projects/rangefitgym-8bae0/rulesets/ddb5c62c-ffbb-45b2-be40-cb9c2d70c182
[debug] [2025-09-10T07:28:25.651Z] [rules] releasing cloud.firestore/(default) with ruleset projects/rangefitgym-8bae0/rulesets/ddb5c62c-ffbb-45b2-be40-cb9c2d70c182
[debug] [2025-09-10T07:28:25.652Z] Checked if tokens are valid: true, expires at: 1757492895352
[debug] [2025-09-10T07:28:25.652Z] Checked if tokens are valid: true, expires at: 1757492895352
[debug] [2025-09-10T07:28:25.653Z] >>> [apiv2][query] PATCH https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0/releases/cloud.firestore/(default) [none]
[debug] [2025-09-10T07:28:25.653Z] >>> [apiv2][body] PATCH https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0/releases/cloud.firestore/(default) {"release":{"name":"projects/rangefitgym-8bae0/releases/cloud.firestore/(default)","rulesetName":"projects/rangefitgym-8bae0/rulesets/ddb5c62c-ffbb-45b2-be40-cb9c2d70c182"}}
[debug] [2025-09-10T07:28:27.288Z] <<< [apiv2][status] PATCH https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0/releases/cloud.firestore/(default) 200
[debug] [2025-09-10T07:28:27.289Z] <<< [apiv2][body] PATCH https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0/releases/cloud.firestore/(default) {"name":"projects/rangefitgym-8bae0/releases/cloud.firestore","rulesetName":"projects/rangefitgym-8bae0/rulesets/ddb5c62c-ffbb-45b2-be40-cb9c2d70c182","createTime":"2025-08-18T13:15:21.070277Z","updateTime":"2025-09-10T07:28:26.550314Z"}
[debug] [2025-09-10T07:28:27.290Z] [rules] updated release projects/rangefitgym-8bae0/releases/cloud.firestore
[info] +  firestore: released rules firestore.rules to cloud.firestore 
[info] 
[info] +  Deploy complete! 
[info] 
[info] Project Console: https://console.firebase.google.com/project/rangefitgym-8bae0/overview
[debug] [2025-09-10T07:29:04.222Z] Error: Timed out.
    at Timeout._onTimeout (C:\Users\hp\AppData\Roaming\npm\node_modules\firebase-tools\lib\utils.js:273:49)
    at listOnTimeout (node:internal/timers:594:17)
    at process.processTimers (node:internal/timers:529:7)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2025-09-10T07:29:38.225Z] ----------------------------------------------------------------------
[debug] [2025-09-10T07:29:38.236Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\hp\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js deploy --only firestore:rules
[debug] [2025-09-10T07:29:38.237Z] CLI Version:   14.15.1
[debug] [2025-09-10T07:29:38.238Z] Platform:      win32
[debug] [2025-09-10T07:29:38.238Z] Node Version:  v22.13.1
[debug] [2025-09-10T07:29:38.239Z] Time:          Wed Sep 10 2025 12:29:38 GMT+0500 (Pakistan Standard Time)
[debug] [2025-09-10T07:29:38.240Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-09-10T07:29:38.955Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-09-10T07:29:38.957Z] > authorizing via signed-in user (shaheermalik03@gmail.com)
[debug] [2025-09-10T07:29:38.957Z] [iam] checking project rangefitgym-8bae0 for permissions ["datastore.indexes.create","datastore.indexes.delete","datastore.indexes.list","datastore.indexes.update","firebase.projects.get"]
[debug] [2025-09-10T07:29:38.961Z] Checked if tokens are valid: true, expires at: 1757492895352
[debug] [2025-09-10T07:29:38.962Z] Checked if tokens are valid: true, expires at: 1757492895352
[debug] [2025-09-10T07:29:38.967Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/rangefitgym-8bae0:testIamPermissions [none]
[debug] [2025-09-10T07:29:38.968Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/rangefitgym-8bae0:testIamPermissions x-goog-quota-user=projects/rangefitgym-8bae0
[debug] [2025-09-10T07:29:38.968Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/rangefitgym-8bae0:testIamPermissions {"permissions":["datastore.indexes.create","datastore.indexes.delete","datastore.indexes.list","datastore.indexes.update","firebase.projects.get"]}
[debug] [2025-09-10T07:29:40.935Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/rangefitgym-8bae0:testIamPermissions 200
[debug] [2025-09-10T07:29:40.935Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/rangefitgym-8bae0:testIamPermissions {"permissions":["datastore.indexes.create","datastore.indexes.delete","datastore.indexes.list","datastore.indexes.update","firebase.projects.get"]}
[info] 
[info] === Deploying to 'rangefitgym-8bae0'...
[info] 
[info] i  deploying firestore 
[info] i  firestore: reading indexes from firestore.indexes.json... 
[info] i  cloud.firestore: checking firestore.rules for compilation errors... 
[debug] [2025-09-10T07:29:40.950Z] Checked if tokens are valid: true, expires at: 1757492895352
[debug] [2025-09-10T07:29:40.951Z] Checked if tokens are valid: true, expires at: 1757492895352
[debug] [2025-09-10T07:29:40.951Z] >>> [apiv2][query] POST https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0:test [none]
[debug] [2025-09-10T07:29:40.951Z] >>> [apiv2][body] POST https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0:test [omitted]
[debug] [2025-09-10T07:29:49.822Z] <<< [apiv2][status] POST https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0:test 200
[debug] [2025-09-10T07:29:49.823Z] <<< [apiv2][body] POST https://firebaserules.googleapis.com/v1/projects/rangefitgym-8bae0:test {}
[info] +  cloud.firestore: rules file firestore.rules compiled successfully 
[debug] [2025-09-10T07:29:49.825Z] Checked if tokens are valid: true, expires at: 1757492895352
[debug] [2025-09-10T07:29:49.825Z] Checked if tokens are valid: true, expires at: 1757492895352
[debug] [2025-09-10T07:29:49.826Z] >>> [apiv2][query] GET https://firestore.googleapis.com/v1/projects/rangefitgym-8bae0/databases/(default) [none]
